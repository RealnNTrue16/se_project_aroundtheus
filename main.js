!function(){"use strict";const e={formSelector:".modal__popup__form",inputSelector:".modal__popup__input",submitButtonSelector:".modal__popup__button",inactiveButtonClass:"modal__popup__button_disabled",inputErrorClass:"modal__popup__input_type_error",errorClass:"modal__popup__error_visible"};class t{constructor(e,t,o,r,n){this._name=e.name,this._link=e.link,this._id=e._id,this._like=e.isLiked,this._cardSelector=t,this._handleImageClick=o,this._handleCardDelete=r,this._handleCardLike=n}viewCard(){const e=document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0);return this._cardElement=e,this._createCard(),this._setEventListeners(),this._cardElement}_createCard(){const e=this._cardElement.querySelector(".card__image"),t=this._cardElement.querySelector(".card__title");e.src=this._link,e.alt=this._name,t.textContent=this._name,this._updateLikeStatus()}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleCardLike(this)})),this._cardElement.querySelector(".card__delete").addEventListener("click",(()=>{this._handleCardDelete(this)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_updateLikeStatus(){this._like?(this._cardElement.querySelector(".card__like-button").classList.add("card__like-button_active"),console.log("Liked!")):this._cardElement.querySelector(".card__like-button").classList.remove("card__like-button_active")}_handleCardDelete(){this._cardElement.remove()}updateLike(e){this._like=e,this._updateLikeStatus()}}class o{constructor(e,t){this._config=e,this._form=t,this._inputElements=[...this._form.querySelectorAll(e.inputSelector)],this._submitButton=this._form.querySelector(this._config.submitButtonSelector)}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(),this._toggleButtonState()}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._handleInputEvent(e)}))}))}_handleInputEvent(e){this._checkInputValidity(e),this._toggleButtonState()}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._config.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._config.errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._config.inputErrorClass),t.textContent=" ",t.classList.remove(this._config.errorClass)}_checkFormValidity(){return this._inputElements.every((e=>e.validity.valid))}_toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._config.inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._config.inactiveButtonClass),this._submitButton.disabled=!0)}resetForm(){this._form.reset(),this._inputElements.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}openPopup(){console.log("opening with class"),this._popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}closePopup(){this._popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{console.log("Closed with Close button"),this.closePopup()})),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&(console.log("Closed By Overlay Click"),this.closePopup())}))}_handleEscClose=e=>{"Escape"===e.key&&(console.log("ESC"),this.closePopup())}}class n extends r{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._formInputs=[...this._popupForm.querySelectorAll(".modal__form-input")]}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset()}))}}const s=document.querySelector("#profile__edit-button"),a=document.querySelector("#profile__edit-modal"),i=(a.querySelector(".modal__close"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile__title-input")),c=document.querySelector("#profile__description-input"),l=a.querySelector(".modal__form"),d=(document.querySelector("#profile__edit-modal"),document.querySelector("#card-template").content.firstElementChild,document.querySelector(".cards__list"),document.querySelector("#card__add-modal")),u=document.querySelector(".profile__add-button"),p=(d.querySelector(".modal__close"),d.querySelector(".modal__form")),_=(d.querySelector("#card__title-input"),d.querySelector("#card__description-input"),d.querySelector(".modal__button")),m=(document.querySelector("#card__add-modal"),document.querySelector("#preview__modal").querySelector(".modal__close"),document.querySelector("#preview__modal"),document.querySelector("#delete__modal")),h=m.querySelector(".modal__button"),f=m.querySelector(".modal__close"),g=document.querySelector("#avatar__modal"),v=document.querySelector(".profile__avatar-edit"),E=g.querySelector(".modal__close"),k=g.querySelector(".modal__button"),S=new class{constructor(e,t){let{item:o,renderer:r}=e;this._renderer=r,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({item:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:B},".cards__list"),y=new class{constructor(e){let{name:t,job:o,avatar:r}=e;this._name=document.querySelector(t),this._job=document.querySelector(o),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e){let{name:t,job:o}=e;this._name.textContent=t,this._job.textContent=o}setUserAvatar(e){this._avatar.src=e}}({name:".profile__title",job:".profile__description",avatar:".profile__image"}),C=new n("#profile__edit-modal",(function(e){console.log("profileData:",e);const t=e.title,o=e.description;console.log("name:",t,"job:",o),y.setUserInfo({name:t,job:o}),j.updateUserInfo(e.title,e.description);const r=y.getUserInfo();console.log(r),C.closePopup()}));C.setEventListeners();const L=new n("#card__add-modal",(function(e){_.textContent="Adding...",j.createNewCard(e.title,e.url).then((e=>{B(e),L.closePopup(),D.resetForm()})).catch((e=>{console.error(e)})),setTimeout((()=>{_.textContent="Add"}),1e3)}));L.setEventListeners();const b=new class extends r{constructor(e){super({popupSelector:e}),this._popupImage=this._popupElement.querySelector(".modal__image"),this._popupImageText=this._popupElement.querySelector(".modal__image_heading")}openPopup(e){let{name:t,link:o}=e;console.log("Preview Class Working"),this._popupImage.src=o,this._popupImageText.textContent=t,this._popupImage.alt=t,super.openPopup()}}("#preview__modal");b.setEventListeners();const q=new n("#avatar__modal",I);q.setEventListeners();const j=new class{constructor(e){}getInitialCards(){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{headers:{authorization:"4792ec92-cf1c-45a6-8740-0f5d63585faa"}}).then((e=>e.ok?(console.log(e.ok),e.json()):(console.log("Error"),Promise.reject(`getInitialCards method Error: ${e.status}`)))).catch((e=>console.error(e)))}getUserInfo(){return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{headers:{authorization:"4792ec92-cf1c-45a6-8740-0f5d63585faa"}}).then((e=>e.ok?e.json():(console.log("Error"),Promise.reject(`getUserInfo method Error: ${e.status}`)))).catch((e=>console.error(e)))}getUserAndCards(){return Promise.all([this.getUserInfo(),this.getInitialCards(),this.updateProfilePic()]).then((e=>{let[t,o]=e;return console.log("Getting User and Card Data..."),console.log([t,o]),{userInfo:t,cards:o}})).catch((e=>{console.error(`getUserAndCards Method Error: ${e}`)}))}updateProfilePic(e){return console.log(e),fetch("https://around-api.en.tripleten-services.com/v1/users/me/avatar",{method:"PATCH",headers:{authorization:"4792ec92-cf1c-45a6-8740-0f5d63585faa","Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((e=>e.ok?(console.log(e),console.log("Profile Picture Updating"),e.json()):(console.log("Can't update Profile Picture"),Promise.reject(`Error: ${e.status}`)))).catch((e=>{console.error(e)}))}updateUserInfo(e,t){return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"PATCH",headers:{authorization:"4792ec92-cf1c-45a6-8740-0f5d63585faa","Content-type":"application/json"},body:JSON.stringify({name:e,about:t})}).then((e=>e.ok?(console.log(e),e.json()):(console.log("ERROR"),Promise.reject(`Promise Rejected: ${e.status}`)))).catch((e=>{console.error(e)}))}createNewCard(e,t){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{method:"POST",headers:{authorization:"4792ec92-cf1c-45a6-8740-0f5d63585faa","Content-type":"application/json"},body:JSON.stringify({name:e,link:t})}).then((e=>e.ok?(console.log("Card Added!"),console.log(e),e.json()):(console.log("ERROR"),Promise.reject(`Promise Rejected: ${e.status}`)))).catch((e=>{console.error(e)}))}deleteCard(e){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}`,{method:"DELETE",headers:{authorization:"4792ec92-cf1c-45a6-8740-0f5d63585faa","Content-type":"application/json"}}).then((e=>e.ok?(console.log("Deleting card"),e.json()):(console.log("Trouble deleting card"),Promise.reject(`Card Deletion Error: ${e.status}`)))).catch((e=>{console.error(e)}))}cardLike(e){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`,{method:"PUT",headers:{authorization:"4792ec92-cf1c-45a6-8740-0f5d63585faa"}}).then((e=>e.ok?(console.log("response ok: "+e.status),e.json()):(console.log("Unable to Like"),Promise.reject(`Like Error:  + ${e.status}`)))).catch((e=>{console.log(e)}))}cardUnlike(e){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`,{method:"DELETE",headers:{authorization:"4792ec92-cf1c-45a6-8740-0f5d63585faa"}}).then((e=>e.ok?(console.log(`Unlike Status: ${e.status}`),e.json()):(console.log("Unable To Unlike"),Promise.reject(`Error: ${e.status}`)))).catch((e=>{console.error(e)}))}}({baseURL:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"4792ec92-cf1c-45a6-8740-0f5d63585faa","Content-type":"application/json"}});function w(e,t){b.openPopup({name:e,link:t})}function I(e){const t=e.url;k.textContent="Saving...",j.updateProfilePic(t).then((()=>{y.setUserAvatar(t)})).catch((e=>{console.error(`Error caught in HandleAvatarUpdate function ${e}`)})),setTimeout((()=>{k.textContent="Save"}),1e3),q.closePopup()}function P(){console.log("Closing Delete Modal"),m.classList.remove("modal_open")}function U(e){e._like?e._like&&j.cardUnlike(e._id).then((()=>{e.updateLike(!1)})).catch((e=>{console.error(e)})):(console.log(e._like),j.cardLike(e._id).then((()=>{e.updateLike(!0)})).catch((e=>{console.error(e)})))}function x(e){console.log(e),console.log("Delete Modal Opening"),m.classList.add("modal_open"),f.addEventListener("click",(()=>{P()})),h.addEventListener("click",(()=>{h.textContent="Deleting...",j.deleteCard(e._id).then((()=>{e._handleCardDelete(e._id),P()})).catch((e=>{console.error(e)})),setTimeout((()=>{h.textContent="Delete"}),1e3)}))}function B(e){const o=function(e){return new t(e,"#card-template",w,x,U).viewCard()}(e);S.addItem(o)}s.addEventListener("click",(()=>{const e=y.getUserInfo();i.value=e.name,c.value=e.job,C.openPopup()})),v.addEventListener("click",(()=>{g.classList.add("modal_open")})),E.addEventListener("click",(()=>{g.classList.remove("modal_open")})),k.addEventListener("submit",(e=>(console.log(k),I()))),u.addEventListener("click",(()=>L.openPopup())),console.log(_),j.getUserAndCards().then((e=>{let{userInfo:t,cards:o}=e;console.log({userInfo:t,cards:o}),y.setUserInfo({name:t.name,job:t.about}),y.setUserAvatar(t.avatar),S.renderItems(o)})).catch((e=>{console.error(e)})),new o(e,l).enableValidation();const D=new o(e,p);D.enableValidation(),new o(e,g).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,